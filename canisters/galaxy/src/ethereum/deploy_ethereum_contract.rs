use alloy::{
    network::{EthereumWallet, TxSigner, TransactionBuilder},
    primitives::Bytes,
    providers::{Provider, ProviderBuilder},
    transports::icp::IcpConfig,
    rpc::types::request::TransactionRequest,    
    sol,  
};
use alloy::sol_types::SolConstructor;
use crate::{create_icp_signer, caller_is_controller, CHAIN_ID, RPC_SERVICE};
use crate::ethereum::types::DeployEthereumContractArgs;
// use tokio::time::{sleep, Duration};
use serde_json::json;


// Custom yet fairly basic ERC 1155 contract that mints tokens with an NFT provision
sol! {
    #[allow(missing_docs)]
    #[sol(rpc, bytecode="60a060405234801561000f575f80fd5b5060405161520b38038061520b83398181016040528101906100319190610c36565b33846100428161017060201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100aa9190610d49565b60405180910390fd5b6100c28161018360201b60201c565b5082600690816100d29190610f6f565b5081600790816100e29190610f6f565b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506103e8600360146101000a81548161ffff021916908361ffff16021790555080600890816101459190610f6f565b50610167335f600160405180602001604052805f81525061024660201b60201c565b50505050611393565b806002908161017f9190610f6f565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036102b6575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016102ad9190610d49565b60405180910390fd5b5f806102c885856102e760201b60201c565b915091506102df5f8784848761031760201b60201c565b505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b610329858585856103db60201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146103d4575f61036b61077160201b60201c565b905060018451036103bd575f61038a5f8661077860201b90919060201c565b90505f6103a05f8661077860201b90919060201c565b90506103b683898985858961078b60201b60201c565b50506103d2565b6103d181878787878761093a60201b60201c565b5b505b5050505050565b805182511461042557815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161041c92919061104d565b60405180910390fd5b5f61043461077160201b60201c565b90505f5b8351811015610630575f610455828661077860201b90919060201c565b90505f61046b838661077860201b90919060201c565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461058e575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561053a57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016105319493929190611074565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461062357805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461061b91906110e4565b925050819055505b5050806001019050610438565b5060018351036106eb575f61064e5f8561077860201b90919060201c565b90505f6106645f8561077860201b90919060201c565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516106dc92919061104d565b60405180910390a4505061076a565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516107619291906111ce565b60405180910390a45b5050505050565b5f33905090565b5f60208202602084010151905092915050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115610932578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016107eb959493929190611255565b6020604051808303815f875af192505050801561082657506040513d601f19601f820116820180604052508101906108239190611302565b60015b6108a7573d805f8114610854576040519150601f19603f3d011682016040523d82523d5f602084013e610859565b606091505b505f81510361089f57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016108969190610d49565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461093057846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109279190610d49565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115610ae1578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161099a95949392919061132d565b6020604051808303815f875af19250505080156109d557506040513d601f19601f820116820180604052508101906109d29190611302565b60015b610a56573d805f8114610a03576040519150601f19603f3d011682016040523d82523d5f602084013e610a08565b606091505b505f815103610a4e57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610a459190610d49565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610adf57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610ad69190610d49565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610b4882610b02565b810181811067ffffffffffffffff82111715610b6757610b66610b12565b5b80604052505050565b5f610b79610ae9565b9050610b858282610b3f565b919050565b5f67ffffffffffffffff821115610ba457610ba3610b12565b5b610bad82610b02565b9050602081019050919050565b8281835e5f83830152505050565b5f610bda610bd584610b8a565b610b70565b905082815260208101848484011115610bf657610bf5610afe565b5b610c01848285610bba565b509392505050565b5f82601f830112610c1d57610c1c610afa565b5b8151610c2d848260208601610bc8565b91505092915050565b5f805f8060808587031215610c4e57610c4d610af2565b5b5f85015167ffffffffffffffff811115610c6b57610c6a610af6565b5b610c7787828801610c09565b945050602085015167ffffffffffffffff811115610c9857610c97610af6565b5b610ca487828801610c09565b935050604085015167ffffffffffffffff811115610cc557610cc4610af6565b5b610cd187828801610c09565b925050606085015167ffffffffffffffff811115610cf257610cf1610af6565b5b610cfe87828801610c09565b91505092959194509250565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d3382610d0a565b9050919050565b610d4381610d29565b82525050565b5f602082019050610d5c5f830184610d3a565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610db057607f821691505b602082108103610dc357610dc2610d6c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610e257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610dea565b610e2f8683610dea565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f610e73610e6e610e6984610e47565b610e50565b610e47565b9050919050565b5f819050919050565b610e8c83610e59565b610ea0610e9882610e7a565b848454610df6565b825550505050565b5f90565b610eb4610ea8565b610ebf818484610e83565b505050565b5b81811015610ee257610ed75f82610eac565b600181019050610ec5565b5050565b601f821115610f2757610ef881610dc9565b610f0184610ddb565b81016020851015610f10578190505b610f24610f1c85610ddb565b830182610ec4565b50505b505050565b5f82821c905092915050565b5f610f475f1984600802610f2c565b1980831691505092915050565b5f610f5f8383610f38565b9150826002028217905092915050565b610f7882610d62565b67ffffffffffffffff811115610f9157610f90610b12565b5b610f9b8254610d99565b610fa6828285610ee6565b5f60209050601f831160018114610fd7575f8415610fc5578287015190505b610fcf8582610f54565b865550611036565b601f198416610fe586610dc9565b5f5b8281101561100c57848901518255600182019150602085019450602081019050610fe7565b868310156110295784890151611025601f891682610f38565b8355505b6001600288020188555050505b505050505050565b61104781610e47565b82525050565b5f6040820190506110605f83018561103e565b61106d602083018461103e565b9392505050565b5f6080820190506110875f830187610d3a565b611094602083018661103e565b6110a1604083018561103e565b6110ae606083018461103e565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110ee82610e47565b91506110f983610e47565b9250828201905080821115611111576111106110b7565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61114981610e47565b82525050565b5f61115a8383611140565b60208301905092915050565b5f602082019050919050565b5f61117c82611117565b6111868185611121565b935061119183611131565b805f5b838110156111c15781516111a8888261114f565b97506111b383611166565b925050600181019050611194565b5085935050505092915050565b5f6040820190508181035f8301526111e68185611172565b905081810360208301526111fa8184611172565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61122782611203565b611231818561120d565b9350611241818560208601610bba565b61124a81610b02565b840191505092915050565b5f60a0820190506112685f830188610d3a565b6112756020830187610d3a565b611282604083018661103e565b61128f606083018561103e565b81810360808301526112a1818461121d565b90509695505050505050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112e1816112ad565b81146112eb575f80fd5b50565b5f815190506112fc816112d8565b92915050565b5f6020828403121561131757611316610af2565b5b5f611324848285016112ee565b91505092915050565b5f60a0820190506113405f830188610d3a565b61134d6020830187610d3a565b818103604083015261135f8186611172565b905081810360608301526113738185611172565b90508181036080830152611387818461121d565b90509695505050505050565b608051613e606113ab5f395f610dc70152613e605ff3fe608060405234801561000f575f80fd5b5060043610610170575f3560e01c80637f0418b4116100dc578063beafdc2411610095578063f2fde38b1161006f578063f2fde38b14610447578063f5298aca14610463578063f785a8b21461047f578063ffbdc8cb146104af57610170565b8063beafdc24146103cb578063e985e9c5146103fb578063f242432a1461042b57610170565b80637f0418b41461031b5780638da5cb5b1461033957806395d89b41146103575780639d00fa33146103755780639d615a8c14610393578063a22cb465146103af57610170565b80632eb2c2d61161012e5780632eb2c2d61461026f578063406afcab1461028b57806343002d5f146102a75780634e1273f4146102c55780636b20c454146102f5578063715018a61461031157610170565b8062fdd58e1461017457806301ffc9a7146101a457806306fdde03146101d45780630e89341c146101f25780631bc8637e146102225780632a55205a1461023e575b5f80fd5b61018e60048036038101906101899190612581565b6104df565b60405161019b91906125ce565b60405180910390f35b6101be60048036038101906101b9919061263c565b610534565b6040516101cb9190612681565b60405180910390f35b6101dc610615565b6040516101e9919061270a565b60405180910390f35b61020c6004803603810190610207919061272a565b6106a1565b604051610219919061270a565b60405180910390f35b61023c6004803603810190610237919061278c565b610775565b005b610258600480360381019061025391906127b7565b6107e6565b604051610266929190612804565b60405180910390f35b61028960048036038101906102849190612a1b565b610828565b005b6102a560048036038101906102a09190612b94565b6108b2565b005b6102af610a9f565b6040516102bc919061270a565b60405180910390f35b6102df60048036038101906102da9190612d3d565b610b2b565b6040516102ec9190612e6a565b60405180910390f35b61030f600480360381019061030a9190612edf565b610c32565b005b610319610db2565b005b610323610dc5565b6040516103309190612f70565b60405180910390f35b610341610de9565b60405161034e9190612f70565b60405180910390f35b61035f610e11565b60405161036c919061270a565b60405180910390f35b61037d610e9d565b60405161038a9190612f98565b60405180910390f35b6103ad60048036038101906103a89190612fb1565b610eb1565b005b6103c960048036038101906103c4919061307e565b6110b9565b005b6103e560048036038101906103e0919061272a565b6110cf565b6040516103f29190612681565b60405180910390f35b610415600480360381019061041091906130bc565b6110ec565b6040516104229190612681565b60405180910390f35b610445600480360381019061044091906130fa565b61117a565b005b610461600480360381019061045c919061318d565b6111d1565b005b61047d600480360381019061047891906131b8565b611255565b005b6104996004803603810190610494919061272a565b611366565b6040516104a69190612681565b60405180910390f35b6104c960048036038101906104c4919061272a565b61138e565b6040516104d6919061270a565b60405180910390f35b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105fe57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061060e575061060d8261142f565b5b9050919050565b6006805461062290613235565b80601f016020809104026020016040519081016040528092919081815260200182805461064e90613235565b80156106995780601f1061067057610100808354040283529160200191610699565b820191905f5260205f20905b81548152906001019060200180831161067c57829003601f168201915b505050505081565b60605f60045f8481526020019081526020015f2080546106c090613235565b9050116106d5576106d082611498565b61076e565b60045f8381526020019081526020015f2080546106f190613235565b80601f016020809104026020016040519081016040528092919081815260200182805461071d90613235565b80156107685780601f1061073f57610100808354040283529160200191610768565b820191905f5260205f20905b81548152906001019060200180831161074b57829003601f168201915b50505050505b9050919050565b61077d61152a565b6107d08161ffff1611156107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd906132af565b60405180910390fd5b80600360146101000a81548161ffff021916908361ffff16021790555050565b5f806107f0610de9565b612710600360149054906101000a900461ffff1661ffff168561081391906132fa565b61081d9190613368565b915091509250929050565b5f5b835181101561089d57600a84828151811061084857610847613398565b5b602002602001015111610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088790613435565b60405180910390fd5b808060010191505061082a565b506108ab85858585856115b1565b5050505050565b6108ba61152a565b5f73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141580156108f557505f87115b801561090357505f86869050115b610942576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109399061349d565b60405180910390fd5b60095f8981526020019081526020015f205f9054906101000a900460ff16156109a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109979061352b565b60405180910390fd5b6109ef89898985858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611658565b858560045f8b81526020019081526020015f209182610a0f9291906136f0565b505f848490501115610a3d57838360055f8b81526020019081526020015f209182610a3b9291906136f0565b505b878973ffffffffffffffffffffffffffffffffffffffff167fd9681b55ebf2c8eb2c6e569b1d48566d53cc4a6a8299d2282757535a4dfb75928989898989604051610a8c9594939291906137e9565b60405180910390a3505050505050505050565b60088054610aac90613235565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad890613235565b8015610b235780601f10610afa57610100808354040283529160200191610b23565b820191905f5260205f20905b815481529060010190602001808311610b0657829003601f168201915b505050505081565b60608151835114610b7757815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610b6e929190613830565b60405180910390fd5b5f835167ffffffffffffffff811115610b9357610b9261282f565b5b604051908082528060200260200182016040528015610bc15781602001602082028036833780820191505090505b5090505f5b8451811015610c2757610bfd610be582876116ed90919063ffffffff16565b610bf8838761170090919063ffffffff16565b6104df565b828281518110610c1057610c0f613398565b5b602002602001018181525050806001019050610bc6565b508091505092915050565b610c3a61152a565b5f5b84849050811015610ccb5760095f868684818110610c5d57610c5c613398565b5b9050602002013581526020019081526020015f205f9054906101000a900460ff1615610cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb5906138a1565b60405180910390fd5b8080600101915050610c3c565b50610d57858585808060200260200160405190810160405280939291908181526020018383602002808284375f81840152601f19601f820116905080830192505050505050508484808060200260200160405190810160405280939291908181526020018383602002808284375f81840152601f19601f82011690508083019250505050505050611713565b8473ffffffffffffffffffffffffffffffffffffffff167f1bd15226cb46c0b01aee66234ee5b786bcf29e960d7b6f34146a8067bee5f17385858585604051610da39493929190613927565b60405180910390a25050505050565b610dba61152a565b610dc35f6117a3565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60078054610e1e90613235565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4a90613235565b8015610e955780601f10610e6c57610100808354040283529160200191610e95565b820191905f5260205f20905b815481529060010190602001808311610e7857829003601f168201915b505050505081565b600360149054906101000a900461ffff1681565b610eb961152a565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610f27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1e906139aa565b60405180910390fd5b60095f8681526020019081526020015f205f9054906101000a900460ff1615610f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7c90613a12565b60405180910390fd5b5f8484905011610fca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc190613a7a565b60405180910390fd5b600160095f8781526020019081526020015f205f6101000a81548160ff02191690831515021790555061100e8686600160405180602001604052805f815250611658565b838360045f8881526020019081526020015f20918261102e9291906136f0565b505f82829050111561105c57818160055f8881526020019081526020015f20918261105a9291906136f0565b505b848673ffffffffffffffffffffffffffffffffffffffff167f2887633b67a5c7f2a78d4a91785e6f088ea0bb8b1961db0ecc1fdb00d662fc68868686866040516110a99493929190613a98565b60405180910390a3505050505050565b6110cb6110c4611866565b838361186d565b5050565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b600a83116111bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b490613b1b565b60405180910390fd5b6111ca85858585856119d6565b5050505050565b6111d961152a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611249575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112409190612f70565b60405180910390fd5b611252816117a3565b50565b61125d61152a565b60095f8381526020019081526020015f205f9054906101000a900460ff16156112bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b290613b83565b60405180910390fd5b806112c684846104df565b1015611307576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fe90613beb565b60405180910390fd5b611312838383611a7d565b818373ffffffffffffffffffffffffffffffffffffffff167fde3ca466246b0da455138dbea78dacd91d3c40dc98d5846ff0193bf67c24b0e78360405161135991906125ce565b60405180910390a3505050565b5f8060055f8481526020019081526020015f20805461138490613235565b9050119050919050565b606060055f8381526020019081526020015f2080546113ac90613235565b80601f01602080910402602001604051908101604052809291908181526020018280546113d890613235565b80156114235780601f106113fa57610100808354040283529160200191611423565b820191905f5260205f20905b81548152906001019060200180831161140657829003601f168201915b50505050509050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6060600280546114a790613235565b80601f01602080910402602001604051908101604052809291908181526020018280546114d390613235565b801561151e5780601f106114f55761010080835404028352916020019161151e565b820191905f5260205f20905b81548152906001019060200180831161150157829003601f168201915b50505050509050919050565b611532611866565b73ffffffffffffffffffffffffffffffffffffffff16611550610de9565b73ffffffffffffffffffffffffffffffffffffffff16146115af57611573611866565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115a69190612f70565b60405180910390fd5b565b5f6115ba611866565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156115ff57506115fd86826110ec565b155b156116435780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161163a929190613c09565b60405180910390fd5b6116508686868686611b1f565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036116c8575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116bf9190612f70565b60405180910390fd5b5f806116d48585611c13565b915091506116e55f87848487611c43565b505050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611783575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161177a9190612f70565b60405180910390fd5b61179e835f848460405180602001604052805f815250611c43565b505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118dd575f6040517fced3e1000000000000000000000000000000000000000000000000000000000081526004016118d49190612f70565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516119c99190612681565b60405180910390a3505050565b5f6119df611866565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015611a245750611a2286826110ec565b155b15611a685780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401611a5f929190613c09565b60405180910390fd5b611a758686868686611cef565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611aed575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611ae49190612f70565b60405180910390fd5b5f80611af98484611c13565b91509150611b18855f848460405180602001604052805f815250611c43565b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b8f575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611b869190612f70565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611bff575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611bf69190612f70565b60405180910390fd5b611c0c8585858585611c43565b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611c4f85858585611df5565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611ce8575f611c8b611866565b90506001845103611cd7575f611caa5f8661170090919063ffffffff16565b90505f611cc05f8661170090919063ffffffff16565b9050611cd0838989858589612185565b5050611ce6565b611ce5818787878787612334565b5b505b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611d5f575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611d569190612f70565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611dcf575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611dc69190612f70565b60405180910390fd5b5f80611ddb8585611c13565b91509150611dec8787848487611c43565b50505050505050565b8051825114611e3f57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611e36929190613830565b60405180910390fd5b5f611e48611866565b90505f5b8351811015612044575f611e69828661170090919063ffffffff16565b90505f611e7f838661170090919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611fa2575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611f4e57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611f459493929190613c30565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461203757805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461202f9190613c73565b925050819055505b5050806001019050611e4c565b5060018351036120ff575f6120625f8561170090919063ffffffff16565b90505f6120785f8561170090919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516120f0929190613830565b60405180910390a4505061217e565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051612175929190613ca6565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561232c578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016121e5959493929190613d2d565b6020604051808303815f875af192505050801561222057506040513d601f19601f8201168201806040525081019061221d9190613d99565b60015b6122a1573d805f811461224e576040519150601f19603f3d011682016040523d82523d5f602084013e612253565b606091505b505f81510361229957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016122909190612f70565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461232a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016123219190612f70565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156124db578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401612394959493929190613dc4565b6020604051808303815f875af19250505080156123cf57506040513d601f19601f820116820180604052508101906123cc9190613d99565b60015b612450573d805f81146123fd576040519150601f19603f3d011682016040523d82523d5f602084013e612402565b606091505b505f81510361244857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161243f9190612f70565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146124d957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016124d09190612f70565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61251d826124f4565b9050919050565b61252d81612513565b8114612537575f80fd5b50565b5f8135905061254881612524565b92915050565b5f819050919050565b6125608161254e565b811461256a575f80fd5b50565b5f8135905061257b81612557565b92915050565b5f8060408385031215612597576125966124ec565b5b5f6125a48582860161253a565b92505060206125b58582860161256d565b9150509250929050565b6125c88161254e565b82525050565b5f6020820190506125e15f8301846125bf565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61261b816125e7565b8114612625575f80fd5b50565b5f8135905061263681612612565b92915050565b5f60208284031215612651576126506124ec565b5b5f61265e84828501612628565b91505092915050565b5f8115159050919050565b61267b81612667565b82525050565b5f6020820190506126945f830184612672565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6126dc8261269a565b6126e681856126a4565b93506126f68185602086016126b4565b6126ff816126c2565b840191505092915050565b5f6020820190508181035f83015261272281846126d2565b905092915050565b5f6020828403121561273f5761273e6124ec565b5b5f61274c8482850161256d565b91505092915050565b5f61ffff82169050919050565b61276b81612755565b8114612775575f80fd5b50565b5f8135905061278681612762565b92915050565b5f602082840312156127a1576127a06124ec565b5b5f6127ae84828501612778565b91505092915050565b5f80604083850312156127cd576127cc6124ec565b5b5f6127da8582860161256d565b92505060206127eb8582860161256d565b9150509250929050565b6127fe81612513565b82525050565b5f6040820190506128175f8301856127f5565b61282460208301846125bf565b9392505050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612865826126c2565b810181811067ffffffffffffffff821117156128845761288361282f565b5b80604052505050565b5f6128966124e3565b90506128a2828261285c565b919050565b5f67ffffffffffffffff8211156128c1576128c061282f565b5b602082029050602081019050919050565b5f80fd5b5f6128e86128e3846128a7565b61288d565b9050808382526020820190506020840283018581111561290b5761290a6128d2565b5b835b818110156129345780612920888261256d565b84526020840193505060208101905061290d565b5050509392505050565b5f82601f8301126129525761295161282b565b5b81356129628482602086016128d6565b91505092915050565b5f80fd5b5f67ffffffffffffffff8211156129895761298861282f565b5b612992826126c2565b9050602081019050919050565b828183375f83830152505050565b5f6129bf6129ba8461296f565b61288d565b9050828152602081018484840111156129db576129da61296b565b5b6129e684828561299f565b509392505050565b5f82601f830112612a0257612a0161282b565b5b8135612a128482602086016129ad565b91505092915050565b5f805f805f60a08688031215612a3457612a336124ec565b5b5f612a418882890161253a565b9550506020612a528882890161253a565b945050604086013567ffffffffffffffff811115612a7357612a726124f0565b5b612a7f8882890161293e565b935050606086013567ffffffffffffffff811115612aa057612a9f6124f0565b5b612aac8882890161293e565b925050608086013567ffffffffffffffff811115612acd57612acc6124f0565b5b612ad9888289016129ee565b9150509295509295909350565b5f80fd5b5f8083601f840112612aff57612afe61282b565b5b8235905067ffffffffffffffff811115612b1c57612b1b612ae6565b5b602083019150836001820283011115612b3857612b376128d2565b5b9250929050565b5f8083601f840112612b5457612b5361282b565b5b8235905067ffffffffffffffff811115612b7157612b70612ae6565b5b602083019150836001820283011115612b8d57612b8c6128d2565b5b9250929050565b5f805f805f805f805f60c08a8c031215612bb157612bb06124ec565b5b5f612bbe8c828d0161253a565b9950506020612bcf8c828d0161256d565b9850506040612be08c828d0161256d565b97505060608a013567ffffffffffffffff811115612c0157612c006124f0565b5b612c0d8c828d01612aea565b965096505060808a013567ffffffffffffffff811115612c3057612c2f6124f0565b5b612c3c8c828d01612aea565b945094505060a08a013567ffffffffffffffff811115612c5f57612c5e6124f0565b5b612c6b8c828d01612b3f565b92509250509295985092959850929598565b5f67ffffffffffffffff821115612c9757612c9661282f565b5b602082029050602081019050919050565b5f612cba612cb584612c7d565b61288d565b90508083825260208201905060208402830185811115612cdd57612cdc6128d2565b5b835b81811015612d065780612cf2888261253a565b845260208401935050602081019050612cdf565b5050509392505050565b5f82601f830112612d2457612d2361282b565b5b8135612d34848260208601612ca8565b91505092915050565b5f8060408385031215612d5357612d526124ec565b5b5f83013567ffffffffffffffff811115612d7057612d6f6124f0565b5b612d7c85828601612d10565b925050602083013567ffffffffffffffff811115612d9d57612d9c6124f0565b5b612da98582860161293e565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612de58161254e565b82525050565b5f612df68383612ddc565b60208301905092915050565b5f602082019050919050565b5f612e1882612db3565b612e228185612dbd565b9350612e2d83612dcd565b805f5b83811015612e5d578151612e448882612deb565b9750612e4f83612e02565b925050600181019050612e30565b5085935050505092915050565b5f6020820190508181035f830152612e828184612e0e565b905092915050565b5f8083601f840112612e9f57612e9e61282b565b5b8235905067ffffffffffffffff811115612ebc57612ebb612ae6565b5b602083019150836020820283011115612ed857612ed76128d2565b5b9250929050565b5f805f805f60608688031215612ef857612ef76124ec565b5b5f612f058882890161253a565b955050602086013567ffffffffffffffff811115612f2657612f256124f0565b5b612f3288828901612e8a565b9450945050604086013567ffffffffffffffff811115612f5557612f546124f0565b5b612f6188828901612e8a565b92509250509295509295909350565b5f602082019050612f835f8301846127f5565b92915050565b612f9281612755565b82525050565b5f602082019050612fab5f830184612f89565b92915050565b5f805f805f8060808789031215612fcb57612fca6124ec565b5b5f612fd889828a0161253a565b9650506020612fe989828a0161256d565b955050604087013567ffffffffffffffff81111561300a576130096124f0565b5b61301689828a01612aea565b9450945050606087013567ffffffffffffffff811115613039576130386124f0565b5b61304589828a01612aea565b92509250509295509295509295565b61305d81612667565b8114613067575f80fd5b50565b5f8135905061307881613054565b92915050565b5f8060408385031215613094576130936124ec565b5b5f6130a18582860161253a565b92505060206130b28582860161306a565b9150509250929050565b5f80604083850312156130d2576130d16124ec565b5b5f6130df8582860161253a565b92505060206130f08582860161253a565b9150509250929050565b5f805f805f60a08688031215613113576131126124ec565b5b5f6131208882890161253a565b95505060206131318882890161253a565b94505060406131428882890161256d565b93505060606131538882890161256d565b925050608086013567ffffffffffffffff811115613174576131736124f0565b5b613180888289016129ee565b9150509295509295909350565b5f602082840312156131a2576131a16124ec565b5b5f6131af8482850161253a565b91505092915050565b5f805f606084860312156131cf576131ce6124ec565b5b5f6131dc8682870161253a565b93505060206131ed8682870161256d565b92505060406131fe8682870161256d565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061324c57607f821691505b60208210810361325f5761325e613208565b5b50919050565b7f4d61782032302520616c6c6f77656400000000000000000000000000000000005f82015250565b5f613299600f836126a4565b91506132a482613265565b602082019050919050565b5f6020820190508181035f8301526132c68161328d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6133048261254e565b915061330f8361254e565b925082820261331d8161254e565b91508282048414831517613334576133336132cd565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6133728261254e565b915061337d8361254e565b92508261338d5761338c61333b565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4f6e65206f72206d6f726520746f6b656e7320617265206e6f6e2d7472616e735f8201527f66657261626c6500000000000000000000000000000000000000000000000000602082015250565b5f61341f6027836126a4565b915061342a826133c5565b604082019050919050565b5f6020820190508181035f83015261344c81613413565b9050919050565b7f496e76616c696420706172616d657465727300000000000000000000000000005f82015250565b5f6134876012836126a4565b915061349282613453565b602082019050919050565b5f6020820190508181035f8301526134b48161347b565b9050919050565b7f546f6b656e20697320756e6971756520616e642063616e6e6f742062652072655f8201527f2d6d696e74656400000000000000000000000000000000000000000000000000602082015250565b5f6135156027836126a4565b9150613520826134bb565b604082019050919050565b5f6020820190508181035f83015261354281613509565b9050919050565b5f82905092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026135af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613574565b6135b98683613574565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6135f46135ef6135ea8461254e565b6135d1565b61254e565b9050919050565b5f819050919050565b61360d836135da565b613621613619826135fb565b848454613580565b825550505050565b5f90565b613635613629565b613640818484613604565b505050565b5b81811015613663576136585f8261362d565b600181019050613646565b5050565b601f8211156136a85761367981613553565b61368284613565565b81016020851015613691578190505b6136a561369d85613565565b830182613645565b50505b505050565b5f82821c905092915050565b5f6136c85f19846008026136ad565b1980831691505092915050565b5f6136e083836136b9565b9150826002028217905092915050565b6136fa8383613549565b67ffffffffffffffff8111156137135761371261282f565b5b61371d8254613235565b613728828285613667565b5f601f831160018114613755575f8415613743578287013590505b61374d85826136d5565b8655506137b4565b601f19841661376386613553565b5f5b8281101561378a57848901358255600182019150602085019450602081019050613765565b868310156137a757848901356137a3601f8916826136b9565b8355505b6001600288020188555050505b50505050505050565b5f6137c883856126a4565b93506137d583858461299f565b6137de836126c2565b840190509392505050565b5f6060820190506137fc5f8301886125bf565b818103602083015261380f8186886137bd565b905081810360408301526138248184866137bd565b90509695505050505050565b5f6040820190506138435f8301856125bf565b61385060208301846125bf565b9392505050565b7f43616e6e6f74206275726e206120756e6971756520746f6b656e0000000000005f82015250565b5f61388b601a836126a4565b915061389682613857565b602082019050919050565b5f6020820190508181035f8301526138b88161387f565b9050919050565b5f80fd5b82818337505050565b5f6138d78385612dbd565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561390a576139096138bf565b5b60208302925061391b8385846138c3565b82840190509392505050565b5f6040820190508181035f8301526139408186886138cc565b905081810360208301526139558184866138cc565b905095945050505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f613994600f836126a4565b915061399f82613960565b602082019050919050565b5f6020820190508181035f8301526139c181613988565b9050919050565b7f546f6b656e20616c7265616479206d696e74656420617320756e6971756500005f82015250565b5f6139fc601e836126a4565b9150613a07826139c8565b602082019050919050565b5f6020820190508181035f830152613a29816139f0565b9050919050565b7f496e76616c6964206d657461646174612055524c0000000000000000000000005f82015250565b5f613a646014836126a4565b9150613a6f82613a30565b602082019050919050565b5f6020820190508181035f830152613a9181613a58565b9050919050565b5f6040820190508181035f830152613ab18186886137bd565b90508181036020830152613ac68184866137bd565b905095945050505050565b7f546f6b656e206973206e6f6e2d7472616e7366657261626c65000000000000005f82015250565b5f613b056019836126a4565b9150613b1082613ad1565b602082019050919050565b5f6020820190508181035f830152613b3281613af9565b9050919050565b7f5468697320746f6b656e2063616e6e6f74206265206275726e656400000000005f82015250565b5f613b6d601b836126a4565b9150613b7882613b39565b602082019050919050565b5f6020820190508181035f830152613b9a81613b61565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f613bd56014836126a4565b9150613be082613ba1565b602082019050919050565b5f6020820190508181035f830152613c0281613bc9565b9050919050565b5f604082019050613c1c5f8301856127f5565b613c2960208301846127f5565b9392505050565b5f608082019050613c435f8301876127f5565b613c5060208301866125bf565b613c5d60408301856125bf565b613c6a60608301846125bf565b95945050505050565b5f613c7d8261254e565b9150613c888361254e565b9250828201905080821115613ca057613c9f6132cd565b5b92915050565b5f6040820190508181035f830152613cbe8185612e0e565b90508181036020830152613cd28184612e0e565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f613cff82613cdb565b613d098185613ce5565b9350613d198185602086016126b4565b613d22816126c2565b840191505092915050565b5f60a082019050613d405f8301886127f5565b613d4d60208301876127f5565b613d5a60408301866125bf565b613d6760608301856125bf565b8181036080830152613d798184613cf5565b90509695505050505050565b5f81519050613d9381612612565b92915050565b5f60208284031215613dae57613dad6124ec565b5b5f613dbb84828501613d85565b91505092915050565b5f60a082019050613dd75f8301886127f5565b613de460208301876127f5565b8181036040830152613df68186612e0e565b90508181036060830152613e0a8185612e0e565b90508181036080830152613e1e8184613cf5565b9050969550505050505056fea26469706673582212202915289874eadbfd276fa578aec5f9b72ed11b8569902c3163ed10b2d2bc153864736f6c634300081a0033")]
    contract AssetGovernance1155 is ERC1155, Ownable, IERC2981 {
        using Strings for uint256;

        // Governance token reserved
        uint256 private constant GOVERNANCE_TOKEN = 0;    
        uint16 private constant BASE_ROYALTY = 1000; // 10%

        // Addresses & royalty configuration
        address public immutable Launcher;
        uint16 public currentRoyaltyPercentage;

        // Token metadata URIs & content hashes
        mapping(uint256 => string) private tokenURIs;
        mapping(uint256 => string) private contentHashes;  // Optional metadata verification hash

        // Basic token info
        string public name;
        string public symbol;
        string public canister_id;
        // Track unique tokens (IDs that can't be re-minted or burned)
        mapping(uint256 => bool) public uniqueTokens;

        event TokenMinted(address indexed to, uint256 indexed tokenId, uint256 amount, string metadataUrl, string contentHash);
        event UniqueTokenMinted(address indexed to, uint256 indexed tokenId, string metadataUrl, string contentHash);
        event BatchTokensMinted(address indexed to, uint256[] tokenIds, uint256[] amounts, string metadataUrl);
        event TokenBurned(address indexed from, uint256 indexed tokenId, uint256 amount);
        event BatchTokensBurned(address indexed from, uint256[] tokenIds, uint256[] amounts);

        constructor(
            string memory _uri,
            string memory _name,
            string memory _symbol,
            string memory _canister_id
        ) ERC1155(_uri) Ownable(msg.sender) {
            name = _name;
            symbol = _symbol;
            canister_id = _canister_id;
            launcher = msg.sender;
            currentRoyaltyPercentage = BASE_ROYALTY;

            // Mint governance token for contract owner
            _mint(msg.sender, GOVERNANCE_TOKEN, 1, "");
        }

        // Override URI lookup function
        function uri(uint256 tokenId) public view override returns (string memory) {
            return bytes(tokenURIs[tokenId]).length > 0 ? tokenURIs[tokenId] : super.uri(tokenId);
        }

        // Royalty Information (ERC2981)
        function royaltyInfo(uint256, uint256 salePrice) 
            external 
            view 
            override 
            returns (address, uint256) 
        {
            return (owner(), (salePrice * currentRoyaltyPercentage) / 10000);
        }

        // Mint a regular token (content hash is optional)
        function mintToken(
            address to, 
            uint256 tokenId, 
            uint256 amount, 
            string calldata metadataUrl,
            string calldata contentHash,
            bytes calldata data
        ) external onlyOwner {
            require(to != address(0) && amount > 0 && bytes(metadataUrl).length > 0, "Invalid parameters");
            require(!uniqueTokens[tokenId], "Token is unique and cannot be re-minted");

            _mint(to, tokenId, amount, data);
            tokenURIs[tokenId] = metadataUrl;

            // Store content hash if provided
            if (bytes(contentHash).length > 0) {
                contentHashes[tokenId] = contentHash;
            }

            emit TokenMinted(to, tokenId, amount, metadataUrl, contentHash);
        }

        // Mint a unique NFT (content hash is optional)
        function mintUniqueToken(
            address to,
            uint256 tokenId,
            string calldata metadataUrl,
            string calldata contentHash
        ) external onlyOwner {
            require(to != address(0), "Invalid address");
            require(!uniqueTokens[tokenId], "Token already minted as unique");
            require(bytes(metadataUrl).length > 0, "Invalid metadata URL");

            uniqueTokens[tokenId] = true; // Mark token as unique
            _mint(to, tokenId, 1, "");
            tokenURIs[tokenId] = metadataUrl;

            // Store content hash if provided
            if (bytes(contentHash).length > 0) {
                contentHashes[tokenId] = contentHash;
            }

            emit UniqueTokenMinted(to, tokenId, metadataUrl, contentHash);
        }

        // Retrieve stored content hash for a given token
        function getContentHash(uint256 tokenId) public view returns (string memory) {
            return contentHashes[tokenId];
        }

        // Check if a token has an associated content hash
        function hasContentHash(uint256 tokenId) public view returns (bool) {
            return bytes(contentHashes[tokenId]).length > 0;
        }

        // Restrict transfers for IDs 1-10 (reserved tokens)
        function safeTransferFrom(
            address from,
            address to,
            uint256 id,
            uint256 amount,
            bytes memory data
        ) public override {
            require(id > 10, "Token is non-transferable");
            super.safeTransferFrom(from, to, id, amount, data);
        }

        function safeBatchTransferFrom(
            address from,
            address to,
            uint256[] memory ids,
            uint256[] memory amounts,
            bytes memory data
        ) public override {
            for (uint256 i = 0; i < ids.length; i++) {
                require(ids[i] > 10, "One or more tokens are non-transferable");
            }
            super.safeBatchTransferFrom(from, to, ids, amounts, data);
        }

        // Burn single token (Only contract owner, EXCEPT unique tokens)
        function burn(
            address from,
            uint256 tokenId,
            uint256 amount
        ) external onlyOwner {
            require(!uniqueTokens[tokenId], "This token cannot be burned");
            require(balanceOf(from, tokenId) >= amount, "Insufficient balance");
            _burn(from, tokenId, amount);
            emit TokenBurned(from, tokenId, amount);
        }

        // Burn batch tokens (Only contract owner, EXCEPT unique tokens)
        function burnBatch(
            address from,
            uint256[] calldata tokenIds,
            uint256[] calldata amounts
        ) external onlyOwner {
            for (uint256 i = 0; i < tokenIds.length; i++) {
                require(!uniqueTokens[tokenIds[i]], "Cannot burn a unique token");
            }
            _burnBatch(from, tokenIds, amounts);
            emit BatchTokensBurned(from, tokenIds, amounts);
        }

        // Adjust royalty percentage (capped at 20%)
        function setRoyaltyPercentage(uint16 newPercentage) external onlyOwner {
            require(newPercentage <= 2000, "Max 20% allowed");
            currentRoyaltyPercentage = newPercentage;
        }
    }
}


// This is the function that deploys the Ethereum contract
// It is used to deploy the ERC1155 contract for the asset backend  

#[ic_cdk::update(guard = "caller_is_controller")]
pub async fn deploy_ethereum_contract(args: DeployEthereumContractArgs) -> Result<String, String> {
    // Setup signer
    let signer = create_icp_signer().await;
    let address = signer.address();

    // Setup provider
    let wallet = EthereumWallet::from(signer);
    let rpc_service = RPC_SERVICE.clone(); //possibly change to reference
    let config = IcpConfig::new(rpc_service);
    let provider = ProviderBuilder::new()
        .with_recommended_fillers()
        .wallet(wallet.clone())
        .on_icp(config);

    // Encode input data for constructor
    let deploy_bytecode: Bytes = [
        &AssetGovernance1155::BYTECODE[..],
        &AssetGovernance1155::constructorCall {
            _uri: args.initial_uri,
            _name: args.name.clone(),
            _symbol: args.symbol,
            _canister_id: args.canister_id,
        }.abi_encode()[..],
    ].concat().into();

    // Get gas prices dynamically
    let base_fee = match provider.get_gas_price().await {
        Ok(fee) => fee,
        Err(e) => return Err(format!("Failed to get base fee: {:?}", e)),
    };

    // Get priority fee
    let priority_fee = match provider.get_max_priority_fee_per_gas().await {
        Ok(fee) => fee,
        Err(e) => return Err(format!("Failed to get priority fee: {:?}", e)),
    };

    // Estimate required gas
    let estimated_gas = match provider.estimate_gas(
        &TransactionRequest::default().with_from(address).with_deploy_code(deploy_bytecode.clone())
    ).await {
        Ok(gas) => gas,
        Err(e) => {
            return Err(format!("Failed to estimate gas: {:?}", e));
        }
    };

    // Apply a safety buffer (20% extra gas)
    let gas_limit = estimated_gas * 120 / 100; // Increase by 20%

    // Log gas parameters for debugging
    ic_cdk::println!(
        "Gas Estimate: {:?}, Adjusted Gas Limit: {:?}, Base Fee: {:?}, Priority Fee: {:?}",
        estimated_gas, gas_limit, base_fee, priority_fee
    );
    // ic_cdk::println!("Estimated Total: {:?}", estimated_gas * base_fee);

    // Construct the deployment transaction
    let tx = TransactionRequest::default()
        .with_from(address)
        .with_deploy_code(deploy_bytecode)
        .with_chain_id(CHAIN_ID)
        .with_nonce(provider.get_transaction_count(address).await.unwrap_or(0))
        .with_gas_limit(gas_limit) 
        .with_max_priority_fee_per_gas(priority_fee)
        .with_max_fee_per_gas(base_fee + priority_fee);

    // Build and sign the transaction
    let tx_envelope = match tx.build(&wallet).await {
        Ok(envelope) => envelope,
        Err(e) => return Err(format!("Failed to build transaction: {:?}", e)),
    };

    // Store transaction hash before sending
    let tx_hash = *tx_envelope.tx_hash();

    // Attempt to send the transaction (ignores the error and checks the receipt either way)
    let _ = provider.send_tx_envelope(tx_envelope).await;

// Retry fetching the transaction receipt up to 5 times
    for _ in 0..5 {
    match provider.get_transaction_receipt(tx_hash).await {
        Ok(Some(tx)) => {
            if let Some(contract_address) = tx.contract_address {
                // Extract additional metadata
                let genesis_tx = tx.transaction_hash.to_string();
                let block_number = tx.block_number.unwrap_or_default().to_string();
                let contract_name = args.name.clone();
                let uploader = address.to_string();

                // Create JSON response
                let response = json!({
                    "contract_address": contract_address.to_string(),
                    "genesis_transaction": genesis_tx,
                    "block_number": block_number,
                    "contract_name": contract_name,
                    "uploader": uploader
                });

                return Ok(response.to_string());
            }
        }
        Ok(None) => {
            println!("Transaction not found yet, retrying...");
        }
        Err(e) => {
            return Err(format!("Failed to retrieve transaction: {:?}", e));
        }
    }
}

Err("Transaction not found after 5 attempts, please check manually.".to_string())

}
